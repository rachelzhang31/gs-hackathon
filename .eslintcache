[{"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/index.js":"1","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/reportWebVitals.js":"2","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/App.js":"3","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/index.js":"4","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/about.js":"5","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/home.js":"6","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Navbar.js":"7","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/context.js":"8","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/firebase.js":"9","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Maps/GlobalCases.js":"10","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/global.js":"11","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/prison.js":"12","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/mortality.js":"13","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/prisoncaserate.js":"14","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/generalcaserate.js":"15","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/generalmortality.js":"16","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/prisonmortality.js":"17","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/linechart.js":"18"},{"size":620,"mtime":1607795190000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607795190000,"results":"21","hashOfConfig":"20"},{"size":1092,"mtime":1607832718598,"results":"22","hashOfConfig":"20"},{"size":128,"mtime":1607795190000,"results":"23","hashOfConfig":"20"},{"size":978,"mtime":1607832033254,"results":"24","hashOfConfig":"20"},{"size":26689,"mtime":1607832603425,"results":"25","hashOfConfig":"20"},{"size":2567,"mtime":1607832491859,"results":"26","hashOfConfig":"20"},{"size":111,"mtime":1607795190000,"results":"27","hashOfConfig":"20"},{"size":892,"mtime":1607795190000,"results":"28","hashOfConfig":"20"},{"size":9067,"mtime":1607831966246,"results":"29","hashOfConfig":"20"},{"size":1446,"mtime":1607829046014,"results":"30","hashOfConfig":"20"},{"size":2032,"mtime":1607832033258,"results":"31","hashOfConfig":"20"},{"size":2138,"mtime":1607832033257,"results":"32","hashOfConfig":"20"},{"size":2616,"mtime":1607832033259,"results":"33","hashOfConfig":"20"},{"size":3607,"mtime":1607832033255,"results":"34","hashOfConfig":"20"},{"size":3921,"mtime":1607832033256,"results":"35","hashOfConfig":"20"},{"size":3931,"mtime":1607832033259,"results":"36","hashOfConfig":"20"},{"size":7352,"mtime":1607832033257,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"12lnpt1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/index.js",[],["84","85"],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/reportWebVitals.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/App.js",["86"],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/index.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/about.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/home.js",["87"],"import React, { Component } from 'react';\nimport USAMap from 'react-usa-map';\nimport LineChart from './linechart.js';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\n\n// Firebase\nimport {FirebaseContext} from '../components/Firebase';\n\n\nconst APIButton = props => {\n    const {firebase, ...rest} = props;\n\n    const getCovidData = firebase.app.functions().httpsCallable('getCovidData');\n    const handleClick = async provider => {\n        const response = await getCovidData({dataset: provider});\n\n        if (response.data) {\n          const data = JSON.parse(response.data);\n          console.log(data);\n        }\n        else {\n          console.error('getCovidData failed');\n        }\n\n        \n    }\n    return (\n      <>\n        <button onClick={() => handleClick(\"cdc\")} {...rest}>\n          Get CDC Data\n        </button>\n        <button onClick={() => handleClick(\"who\")} {...rest}>\n          Get WHO Data\n        </button>\n      </>\n    );\n}\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isOpen_AL: false,\n            isOpen_NJ: false,\n            isOpen_AK: false,\n            isOpen_AZ: false,\n            isOpen_AR: false,\n            isOpen_CA: false,\n            isOpen_CO: false,\n            isOpen_CT: false,\n            isOpen_DE: false,\n            isOpen_DC: false,\n            isOpen_FL: false,\n            isOpen_GA: false,\n            isOpen_HI: false,\n            isOpen_ID: false,\n            isOpen_IL: false,\n            isOpen_IN: false,\n            isOpen_IA: false,\n            isOpen_KS: false,\n            isOpen_KY: false,\n            isOpen_LA: false,\n            isOpen_ME: false,\n            isOpen_MD: false,\n            isOpen_MA: false,\n            isOpen_MI: false,\n            isOpen_MN: false,\n            isOpen_MS: false,\n            isOpen_MO: false,\n            isOpen_MT: false,\n            isOpen_NE: false,\n            isOpen_NV: false,\n            isOpen_NH: false,\n            isOpen_NJ: false,\n            isOpen_NM: false,\n            isOpen_NY: false,\n            isOpen_NC: false,\n            isOpen_ND: false,\n            isOpen_OH: false,\n            isOpen_OK: false,\n            isOpen_OR: false,\n            isOpen_PA: false,\n            isOpen_RI: false,\n            isOpen_SC: false,\n            isOpen_SD: false,\n            isOpen_TN: false,\n            isOpen_TX: false,\n            isOpen_UT: false,\n            isOpen_VT: false,\n            isOpen_VA: false,\n            isOpen_WA: false,\n            isOpen_WV: false,\n            isOpen_WI: false,\n            isOpen_WY: false\n        };\n    }\n\n    mapHandler = (event) => {\n        alert(event.target.dataset.name);\n    };\n\n    statesCustomConfig = () => {\n        return {\n            \"AL\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_AL: true })\n            },\n            \"AK\":{\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_AK: true })\n            },\n            \"AR\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_AR: true })\n            },\n            \"AZ\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_AZ: true })\n            },\n            \"CA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_CA: true })\n            },\n            \"CO\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_CO: true })\n            },\n            \"CT\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_CT: true })\n            },\n            \"DE\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_DE: true })\n            },\n            \"DC\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_DC: true })\n            },\n            \"FL\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_FL: true })\n            },\n            \"GA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_GA: true })\n            },\n            \"HI\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_HI: true })\n            },\n            \"ID\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_ID: true })\n            },\n            \"IL\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_IL: true })\n            },\n            \"IN\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_IN: true })\n            },\n            \"IA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_IA: true })\n            },\n            \"KS\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_KS: true })\n            },\n            \"KY\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_KY: true })\n            },\n            \"LA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_LA: true })\n            },\n            \"ME\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_ME: true })\n            },\n            \"MD\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_MD: true })\n            },\n            \"MA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_MA: true })\n            },\n            \"MI\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_MI: true })\n            },\n            \"MN\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_MN: true })\n            },\n            \"MS\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_MS: true })\n            },\n            \"MO\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_MO: true })\n            },\n            \"MT\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_MT: true })\n            },\n            \"NE\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_NE: true })\n            },\n            \"NV\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_NV: true })\n            },\n            \"NH\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_NH: true })\n            },\n            \"NJ\": {\n              fill: \"navy\",\n              clickHandler: (event) => this.setState({ isOpen_NJ: true })\n            },\n            \"NM\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_NM: true })\n            },\n            \"NY\": {\n              fill: \"#CC0000\"\n            },\n            \"NC\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_NC: true })\n            },\n            \"ND\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_ND: true })\n            },\n            \"OH\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_OH: true })\n            },\n            \"OK\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_OK: true })\n            },\n            \"OR\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_OR: true })\n            },\n            \"PA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_PA: true })\n            },\n            \"RI\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_RI: true })\n            },\n            \"SC\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_SC: true })\n            },\n            \"SD\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_SD: true })\n            },\n            \"TN\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_TN: true })\n            },\n            \"TX\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_TX: true })\n            },\n            \"UT\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_UT: true })\n            },\n            \"VT\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_VT: true })\n            },\n            \"VA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_VA: true })\n            },\n            \"WA\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_WA: true })\n            },\n            \"WV\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_WV: true })\n            },\n            \"WI\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_WI: true })\n            },\n            \"WY\": {\n                fill: \"#CC0000\",\n                clickHandler: (event) => this.setState({ isOpen_WY: true })\n            }\n          };\n    };\n\n    render() {\n        return (\n        <div>\n          <div className=\"App\" style={{marginBottom: 10}}>\n            <FirebaseContext.Consumer>\n              {(firebase) => <APIButton firebase={firebase} />}\n            </FirebaseContext.Consumer>\n            <h1 style={{ color: \"black\" }}>Covid Impact by State</h1>\n            <USAMap\n              customize={this.statesCustomConfig()}\n              onClick={this.mapHandler}\n            />\n            {this.state.isOpen_AL && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Alabama%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_AL: false})}\n                />\n            )}\n            {this.state.isOpen_AK && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Alaska%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_AK: false})}\n                />\n            )}\n            {this.state.isOpen_AR && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Arkansas%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_AR: false})}\n                />\n            )}\n               {this.state.isOpen_AZ && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Arizona%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_AZ: false})}\n                />\n            )}\n             {this.state.isOpen_CA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/California%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_CA: false})}\n                />\n            )}\n             {this.state.isOpen_CO && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Colorado%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_CO: false})}\n                />\n            )}\n            {this.state.isOpen_CT && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Connecticut%20Mobility.png'}\n                    onCloseRequest={() => this.setState({isOpen_CT: false})}\n                />\n            )}\n            {this.state.isOpen_DE && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Delaware%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_DE: false})}\n                />\n            )}\n            {this.state.isOpen_DC && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/District%20of%20Columbia%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_DC: false})}\n                />\n            )}\n             {this.state.isOpen_FL && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Florida%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_FL: false})}\n                />\n            )}\n             {this.state.isOpen_GA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Georgia%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_GA: false})}\n                />\n            )}\n            {this.state.isOpen_HI && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Hawaii%20Mobility.png'}\n                    onCloseRequest={() => this.setState({isOpen_HI: false})}\n                />\n            )}\n            {this.state.isOpen_ID && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Idaho%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_ID: false})}\n                />\n            )}\n            {this.state.isOpen_IL && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Illinois%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_IL: false})}\n                />\n            )}\n            {this.state.isOpen_IN && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Indiana%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_IN: false})}\n                />\n            )}\n            {this.state.isOpen_IA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Iowa%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_IA: false})}\n                />\n            )}\n            {this.state.isOpen_KS && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Kansas%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_KS: false})}\n                />\n            )}\n            {this.state.isOpen_KY && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Kentucky%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_KY: false})}\n                />\n            )}\n            {this.state.isOpen_LA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Louisiana%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_LA: false})}\n                />\n            )}\n            {this.state.isOpen_ME && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Maine%20Mobility.png'}\n                    onCloseRequest={() => this.setState({isOpen_ME: false})}\n                />\n            )}\n            {this.state.isOpen_MD && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Maryland%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_MD: false})}\n                />\n            )}\n            {this.state.isOpen_MA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Massachusetts%20Mobility.png'}\n                    onCloseRequest={() => this.setState({isOpen_MA: false})}\n                />\n            )}\n            {this.state.isOpen_MI && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Michigan%20Mobility.png'}\n                    onCloseRequest={() => this.setState({isOpen_MI: false})}\n                />\n            )}\n            {this.state.isOpen_MN && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Minnesota%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_MN: false})}\n                />\n            )}\n            {this.state.isOpen_MS && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Mississippi%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_MS: false})}\n                />\n            )}\n            {this.state.isOpen_MO && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Missouri%20Mobility.png'}\n                    onCloseRequest={() => this.setState({isOpen_MO: false})}\n                />\n            )}\n            {this.state.isOpen_MT && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Montana%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_MT: false})}\n                />\n            )}\n            {this.state.isOpen_NE && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Nebraska%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_NE: false})}\n                />\n            )}\n            {this.state.isOpen_NV && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Nevada%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_NV: false})}\n                />\n            )}\n            {this.state.isOpen_NH && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/New%20Hampshire%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_NH: false})}\n                />\n            )}\n            {this.state.isOpen_NJ && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/New%20Jersey%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_NJ: false})}\n                />\n            )}\n            {this.state.isOpen_NM && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/New%20Mexico%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_NM: false})}\n                />\n            )}\n            {this.state.isOpen_NY && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/New%20York%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_NY: false})}\n                />\n            )}\n            {this.state.isOpen_NC && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/North%20Carolina%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_NC: false})}\n                />\n            )}\n            {this.state.isOpen_ND && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/North%20Dakota%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_ND: false})}\n                />\n            )}\n            {this.state.isOpen_OH && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Ohio%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_OH: false})}\n                />\n            )}\n            {this.state.isOpen_OK && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Oklahoma%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_OK: false})}\n                />\n            )}\n            {this.state.isOpen_OR && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Oregon%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_OR: false})}\n                />\n            )}\n            {this.state.isOpen_PA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Pennsylvania%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_PA: false})}\n                />\n            )}\n            {this.state.isOpen_RI && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Rhode%20Island%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_RI: false})}\n                />\n            )}\n            {this.state.isOpen_SC && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/South%20Carolina%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_SC: false})}\n                />\n            )}\n            {this.state.isOpen_SD && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/South%20Dakota%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_SD: false})}\n                />\n            )}\n            {this.state.isOpen_TN && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Tennessee%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_TN: false})}\n                />\n            )}\n            {this.state.isOpen_TX && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Texas%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_TX: false})}\n                />\n            )}\n            {this.state.isOpen_UT && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Utah%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_UT: false})}\n                />\n            )}\n            {this.state.isOpen_VT && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Vermont%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_VT: false})}\n                />\n            )}\n            {this.state.isOpen_VA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Virginia%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_VA: false})}\n                />\n            )}\n            {this.state.isOpen_WA && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Washington%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_WA: false})}\n                />\n            )}\n            {this.state.isOpen_WV && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/West%20Virginia%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_WV: false})}\n                />\n            )}\n            {this.state.isOpen_WI && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Wisconsin%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_WI: false})}\n                />\n            )}\n            {this.state.isOpen_WY && (\n                <Lightbox\n                    mainSrc={'https://github.com/rachelzhang31/gs-hackathon/blob/US-States-Mobility/Wyoming%20Mobility.png?raw=true'}\n                    onCloseRequest={() => this.setState({isOpen_WY: false})}\n                />\n            )}\n            <h6 style={{ color: \"black\" }}>\n              Dataset provided by the CDC and accessed via Goldman Sachs's\n              Marquee API\n            </h6>\n          </div>\n          <div>\n              <LineChart/>\n          </div>\n          </div>\n        );\n    }\n}\n\nexport default Home;","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Navbar.js",["88","89"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaBars, FaTimes } from 'react-icons/fa'\r\nimport { RiVirusFill } from 'react-icons/ri'\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons/lib'\r\nimport { render } from '@testing-library/react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false)\r\n  const handleClick = () => setClick(!click)\r\n  const [button, setButton] = useState(true)\r\n  const closeMobileMenu = () => setClick(false)\r\n  const showButton = () => {\r\n    if(window.innerWidth <= 960){\r\n      setButton(false)\r\n    } else{\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  },[]);\r\n  window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n      <>\r\n      <IconContext.Provider value={{color: '#fff'}}>\r\n        <Paper className=\"navbar\" elevation = {10} style = {{background: '#64A8F0', borderRadius: 0}}>\r\n          <div className=\"navbar-container container\">\r\n            <Link to='/' className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n              <RiVirusFill className='navbar-icon'/>\r\n              COVID-19 and Unemployment in the US\r\n              </Link> \r\n              <div className=\"menu-icon\" onClick = {handleClick}>\r\n                {click ? <FaTimes /> : <FaBars />}\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/global\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Global\r\n                </Link>\r\n                </li>\r\n                <li className = 'nav-item'>\r\n              <Link to=\"/caserates\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Case Rates\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/mortalityrates\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Mortality Rates\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                About\r\n              </Link>\r\n            </li>\r\n      \r\n          </ul>\r\n          </div>\r\n        </Paper>\r\n        </IconContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport default Navbar\r\n","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/context.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/firebase.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Maps/GlobalCases.js",["90","91","92","93","94"],"// Cory Milsap 12/12/2020\n\nimport React, { useEffect } from 'react';\n\n// Mui Components\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Popover from '@material-ui/core/Popover';\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\n// Mui styling\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\n// Mui Icons\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport PauseRoundedIcon from '@material-ui/icons/PauseRounded';\nimport EditIcon from '@material-ui/icons/Edit';\n\n// Nivo\nimport { ResponsiveChoropleth } from '@nivo/geo';\nimport countries from './countries.json';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    borderRaidus: 30,\n  },\n  content: {\n    padding: '0px 0px 0px 0px',\n    paddingBottom: '0px !important',\n    height: 600\n  },\n  cardTitle: {\n    color: '#FFF', \n    fontWeight: '500'\n  },\n  footer: {\n    background: '#D6B48C',\n    padding: 10\n  }\n}));\n\nconst Choropleth = props => {\n  const {date, data, valueDisplayed, ...rest} = props;\n\n  const [displayedData, setDisplayedData] = React.useState([]);\n  const [legendMax, setLegendMax] = React.useState();\n  useEffect(() => {\n     const filteredData = data.filter(datapoint => datapoint.date === date);\n     let newDisplayedData = [];\n     let max = 0;\n     for (let point of filteredData) {\n       if (point[valueDisplayed] > max) max = point[valueDisplayed];\n       const obj = {\n         id: point.countryId,\n         value: point[valueDisplayed],\n       };\n       newDisplayedData.push(obj);\n     }\n     setDisplayedData(newDisplayedData)\n     setLegendMax(max);\n  }, [date, valueDisplayed])\n\n  return (\n    <ResponsiveChoropleth\n      data={displayedData}\n      features={countries.features}\n      colors=\"reds\"\n      valueFormat=\".2s\"\n      projectionTranslation = {[0.5, .65]}\n      projectionScale = {120}\n      legends={[\n        {\n          anchor: \"bottom-left\",\n          direction: \"column\",\n          justify: true,\n          itemsSpacing: 0,\n          itemWidth: 90,\n          itemHeight: 18,\n          translateX: 20,\n          translateY: -100,\n          itemDirection: \"left-to-right\",\n          itemTextColor: \"#444444\",\n          itemOpacity: 0.85,\n          symbolSize: 18,\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemTextColor: \"#000000\",\n                itemOpacity: 1\n              }\n            }\n          ]\n        }\n    ]}\n      theme = {{\n        background: '#D3D3D3'\n      }}\n      domain={[legendMax / 4, legendMax]}\n    />\n  );\n      }\n\nconst RadioMenu = props => {\n  const {options, activeOption, setActiveOption, ...rest} = props;\n\n  const handleChange = event => {\n    const newActiveOption = options.find(el => el.id === event.target.value);\n    setActiveOption(newActiveOption);\n  }\n\n  return (\n  <RadioGroup value={activeOption.id} onChange={handleChange} style = {{padding: 20}}>\n    {options.map(opt => <FormControlLabel value = {opt.id} control = {<Radio color = 'inherit' style = {{color: '#64A8F0'}}/>} label = {opt.name}/>)}\n  </RadioGroup>\n  )\n}\n\nconst PopoverMenu = props => {\n  const {anchorEl, handleClose, options, activeOption, setActiveOption} = props;\n\n  useEffect(() => {}, [anchorEl]);\n\n  return (\n    <Popover\n      open={anchorEl}\n      anchorEl={anchorEl}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      style = {{padding: 20}}\n    >\n      <RadioMenu options={options} activeOption = {activeOption} setActiveOption = {newOption => setActiveOption(newOption)} />\n    </Popover>\n  );\n}\n\nconst GlobalCasesCard = props => {\n  const {firebase, data, datesList, status, valueDisplayed, ...rest} = props;\n  const classes = useStyles();\n\n  const options = [\n    {\n      name: 'Total Confirmed Cases',\n      id: 'totalConfirmed'\n    },\n    {\n      name: 'Daily Confirmed Cases',\n      id: 'newConfirmed'\n    },\n    {\n      name: 'Total Fatalities',\n      id: 'totalFatalities'\n    },\n    {\n      name: 'Daily Fatalities',\n      id: 'newFatalities'\n    },\n  ]\n  \n  // CurrDateIndex is the index of DatesList that is currently selected\n  const [currDateIndex, setCurrDateIndex] = React.useState(0);\n  const [playing, setPlaying] = React.useState(null);     // Autoplay\n  const [activeOption, setActiveOption] = React.useState(options[0]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  \n  useEffect(() => {\n    if (!datesList) return;\n    if (currDateIndex >= datesList.length - 1 && playing)\n      togglePlaying();\n  }, [currDateIndex])\n  const togglePlaying = () => {\n    if (!playing) {\n      startPlaying();\n    }\n    else {\n      stopPlaying();\n    }\n  }\n  \n  const startPlaying = () => {\n    const intervalID = setInterval(() => {\n      increaseCurrDateIndex();\n    }, 250);\n    setPlaying(intervalID)\n  }\n\n  const increaseCurrDateIndex = () => {\n    setCurrDateIndex(prev => prev + 1);\n  }\n\n  const stopPlaying = () => {\n    clearInterval(playing);\n    setPlaying(null);\n  }\n  const handleSliderChange = (event, newValue) => {\n    setCurrDateIndex(newValue);\n  }\n\n  const handleMenuOpen = ev => {\n    setAnchorEl(ev.currentTarget);\n  }\n  return (\n    <Card className={classes.root} elevation={10}>\n      <CardContent className={classes.content}>\n        {status === \"loading\" ? (\n          <Grid\n            container\n            style={{ height: \"100%\", width: \"100%\", background: \"#D3D3D3\" }}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress color=\"inherit\" style={{ color: \"#64A8F0\" }} />\n          </Grid>\n        ) : (\n          <Choropleth\n            date={datesList[currDateIndex]}\n            data={data}\n            valueDisplayed={activeOption.id}\n          />\n        )}\n      </CardContent>\n      <CardActions style={{ padding: 0 }}>\n        <Grid container className={classes.footer} justify=\"space-between\">\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"flex-start\"\n            xs={6}\n          >\n            <Grid item>\n              <Grid container>\n                <Typography variant=\"h5\" className={classes.cardTitle}>\n                  {`${activeOption.name} of COVID-19`}\n                </Typography>\n                <IconButton\n                  size=\"small\"\n                  color=\"inherit\"\n                  style={{ color: \"#FFF\" }}\n                  onClick={handleMenuOpen}\n                >\n                  <EditIcon />\n                </IconButton>\n                <PopoverMenu\n                  anchorEl={anchorEl}\n                  handleClose={() => setAnchorEl(null)}\n                  options={options}\n                  activeOption={activeOption}\n                  setActiveOption={(newOp) => {\n                    setActiveOption(newOp);\n                  }}\n                />\n              </Grid>\n            </Grid>\n            {datesList ? (\n              <Typography variant=\"subtitle1\" className={classes.cardTitle}>\n                {`${datesList[0]} – ${datesList[datesList.length - 1]}`}\n              </Typography>\n            ) : null}\n\n            <Typography variant=\"subtitle1\" className={classes.cardTitle}>\n              CDC, Marquee\n            </Typography>\n          </Grid>\n          <Grid\n            container\n            item\n            justify=\"space-around\"\n            alignItems=\"center\"\n            xs={6}\n          >\n            <Grid item xs={3}>\n              {datesList ? (\n                <Typography variant=\"subtitle1\" className={classes.cardTitle}>\n                  {datesList[currDateIndex]}\n                </Typography>\n              ) : null}\n            </Grid>\n            <Grid item xs={7}>\n              <Slider\n                value={currDateIndex}\n                min={0}\n                max={datesList ? datesList.length - 1 : 100}\n                onChange={handleSliderChange}\n                color=\"inherit\"\n                style={{ color: \"#64A8F0\", marginTop: 4 }}\n              />\n            </Grid>\n            <Grid item xs={1}>\n              <IconButton\n                size=\"small\"\n                color=\"inherit\"\n                style={{ color: \"#FFF\" }}\n                onClick={() => togglePlaying()}\n              >\n                {!playing ? <PlayArrowRoundedIcon /> : <PauseRoundedIcon />}\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default GlobalCasesCard",["95","96"],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/global.js",["97","98","99"],"import React from 'react';\n\n// Firebase\nimport {FirebaseContext} from '../components/Firebase';\n\n// Mui Comonents\nimport Grid from '@material-ui/core/Grid';\n\n// Custom Components\nimport GlobalCases from '../components/Maps/GlobalCases';\n\nconst Global = props => {\n  const {firebase, ...rest} = props;\n\n  const [data, setData] = React.useState()\n  const [datesList, setDatesList] = React.useState();\n  const [status, setStatus] = React.useState('loading');\n\n  React.useEffect(async () => {\n    // Load in data\n    const getCovidData = firebase.app.functions().httpsCallable(\"getCovidData\");\n    const response = await getCovidData({ dataset: \"who\" });\n\n    if (response.data) {\n      const data = JSON.parse(response.data);\n      setData(data.data);\n\n      // Get list of all available dates in dataset.\n      let dates = [];\n      for (let point of data.data) {\n        dates.push(point.date);\n      }\n\n      // Remove duplicate dates and sort\n      let uniqueDates = [...new Set(dates)];\n      uniqueDates.sort();\n\n      setDatesList(uniqueDates);\n      setStatus(\"successful\");\n\n    } else {\n      setStatus(\"failed\");\n      console.error(\"getCovidData failed\");\n    }\n  }, []);\n\n  return (\n    <Grid container style = {{width: '100vw'}} justify = 'space-around' {...rest}>\n      <Grid item xs = {12} md = {10}>\n      <GlobalCases data = {data} status = {status} datesList = {datesList}/>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Global;","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/prison.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/mortality.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/prisoncaserate.js",["100"],"export default [\n{\n    \"id\": \"01\",\n    \"value\": 5526.132777\n},\n  {\n    \"id\": \"02\",\n    \"value\": 26537.2874\n\n  },\n  {\n    \"id\": \"03\",\n    \"value\": 11075.85139\n\n  },\n  {\n    \"id\": \"04\",\n    \"value\": 0 //NO DATA AVAILABLE\n  },\n  {\n    \"id\": \"05\",\n    \"value\": 26242.94473\n\n  },\n  {\n    \"id\": \"06\",\n    \"value\": 39214.88448\n\n  },\n  {\n    \"id\": \"07\",\n    \"value\": 25481.38639\n\n  },\n  {\n    \"id\": \"08\",\n    \"value\": 0 //NO DATA AVAILABLE\n  },\n  {\n    \"id\": \"09\",\n    \"value\": 20735.61092\n\n  },\n  {\n    \"id\": \"10\",\n    \"value\": 4967.687321\n\n  },\n  {\n    \"id\": \"11\",\n    \"value\": 30975.1434\n\n  },\n  {\n    \"id\": \"12\",\n    \"value\": 39140.87513\n\n  },\n  {\n    \"id\": \"13\",\n    \"value\": 17027.17693\n\n  },\n  {\n    \"id\": \"14\",\n    \"value\": 10758.99682\n\n  },\n  {\n    \"id\": \"15\",\n    \"value\": 49440.32367\n\n  },\n  {\n    \"id\": \"16\",\n    \"value\": 60743.9981\n\n  },\n  {\n    \"id\": \"17\",\n    \"value\": 28265.96368\n\n  },\n  {\n    \"id\": \"18\",\n    \"value\": 18338.75761\n\n  },\n  {\n    \"id\": \"19\",\n    \"value\": 8493.771234\n\n  },\n  {\n    \"id\": \"20\",\n    \"value\": 11887.30853\n\n  },\n  {\n    \"id\": \"21\",\n    \"value\": 22499.62847\n\n  },\n  {\n    \"id\": \"22\",\n    \"value\": 50331.04822\n\n  },\n  {\n    \"id\": \"23\",\n    \"value\": 43458.74587\n\n  },\n  {\n    \"id\": \"24\",\n    \"value\": 0 //NO DATA AVAILABLE\n\n  },\n  {\n    \"id\": \"25\",\n    \"value\": 20862.69848\n\n\n  },\n  {\n    \"id\": \"26\",\n    \"value\":28109.98398\n\n\n  },\n  {\n    \"id\": \"27\",\n    \"value\": 14555.55556\n\n  },\n  {\n    \"id\": \"28\",\n    \"value\": 10032.82179\n\n  },\n  {\n    \"id\": \"29\",\n    \"value\": 0 //NO DATA AVAILABLE\n  },\n  {\n    \"id\": \"30\",\n    \"value\": 22950.48701\n\n  },\n  {\n    \"id\": \"31\",\n    \"value\": 29623.48648\n\n  },\n  {\n    \"id\": \"32\",\n    \"value\": 5444.237557\n\n  },\n  {\n    \"id\": \"33\",\n    \"value\": 19763.8386\n\n\n  },\n  {\n    \"id\": \"34\",\n    \"value\": 42989.0848\n\n\n  },\n  {\n    \"id\": \"35\",\n    \"value\": 18008.74538\n\n\n  },\n  {\n    \"id\": \"36\",\n    \"value\": 29338.49986\n\n\n  },\n  {\n    \"id\": \"37\",\n    \"value\": 11460.9476\n\n\n  },\n  {\n    \"id\": \"38\",\n    \"value\": 7751.975217\n\n\n  },\n  {\n    \"id\": \"39\",\n    \"value\": 0 //no data available\n\n  },\n  {\n    \"id\": \"40\",\n    \"value\": 15010.24272\n\n  },\n  {\n    \"id\": \"41\",\n    \"value\": 71357.25429\n\n  },\n  {\n    \"id\": \"42\",\n    \"value\": 31048.75805\n\n  },\n  {\n    \"id\": \"43\",\n    \"value\": 21941.11821\n\n  },\n  {\n    \"id\": \"44\",\n    \"value\": 32726.64835\n\n  },\n  {\n    \"id\": \"45\",\n    \"value\": 17604.09058\n\n  },\n  {\n    \"id\": \"46\",\n    \"value\": 20722.69041\n\n  },\n  {\n    \"id\": \"47\",\n    \"value\": 13613.63337\n\n  },\n  {\n    \"id\": \"48\",\n    \"value\": 20325.98274\n\n  },\n  {\n    \"id\": \"49\",\n    \"value\": 45176.95711\n\n  },\n  {\n    \"id\": \"50\",\n    \"value\": 0 //none available\n  }\n]","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/generalcaserate.js",["101"],"export default [\n    {\n        \"id\": \"01\",\n        \"value\": 1434.944837\n\n    },\n      {\n        \"id\": \"02\",\n        \"value\": 279.1352548\n\n      },\n      {\n        \"id\": \"03\",\n        \"value\": 2042.7089\n\n    \n      },\n      {\n        \"id\": \"04\",\n        \"value\": 1148.351583\n\n      },\n      {\n        \"id\": \"05\",\n        \"value\": 1035.894639\n\n    \n      },\n      {\n        \"id\": \"06\",\n        \"value\": 712.6737534\n\n    \n      },\n      {\n        \"id\": \"07\",\n        \"value\": 1349.007808\n\n    \n      },\n      {\n        \"id\": \"08\",\n        \"value\": 1411.635674\n\n      },\n      {\n        \"id\": \"09\",\n        \"value\": 1721.94119\n\n    \n      },\n      {\n        \"id\": \"10\",\n        \"value\": 1403.240692\n\n    \n      },\n      {\n        \"id\": \"11\",\n        \"value\": 100.1502961\n\n    \n      },\n      {\n        \"id\": \"12\",\n        \"value\": 885.4182696\n\n    \n      },\n      {\n        \"id\": \"13\",\n        \"value\": 1301.028479\n\n    \n      },\n      {\n        \"id\": \"14\",\n        \"value\": 860.2809861\n\n    \n      },\n      {\n        \"id\": \"15\",\n        \"value\": 1258.957804\n\n    \n      },\n      {\n        \"id\": \"16\",\n        \"value\": 787.0418362\n\n    \n      },\n      {\n        \"id\": \"17\",\n        \"value\": 538.5353852\n\n    \n      },\n      {\n        \"id\": \"18\",\n        \"value\":2077.592597\n\n    \n      },\n      {\n        \"id\": \"19\",\n        \"value\": 276.9652406\n\n    \n      },\n      {\n        \"id\": \"20\",\n        \"value\": 1315.732887\n\n    \n      },\n      {\n        \"id\": \"21\",\n        \"value\": 1654.44977\n\n    \n      },\n      {\n        \"id\": \"22\",\n        \"value\": 831.6830811\n\n    \n      },\n      {\n        \"id\": \"23\",\n        \"value\": 841.491076\n\n    \n      },\n      {\n        \"id\": \"24\",\n        \"value\": 1529.627717\n\n      },\n      {\n        \"id\": \"25\",\n        \"value\": 573.4323889\n\n    \n    \n      },\n      {\n        \"id\": \"26\",\n        \"value\":253.6541733\n\n    \n    \n      },\n      {\n        \"id\": \"27\",\n        \"value\": 1198.816382\n\n    \n      },\n      {\n        \"id\": \"28\",\n        \"value\": 1218.379848\n\n    \n      },\n      {\n        \"id\": \"29\",\n        \"value\":460.539041\n\n      },\n      {\n        \"id\": \"30\",\n        \"value\": 1995.63396\n\n    \n      },\n      {\n        \"id\": \"31\",\n        \"value\": 835.4043177\n\n    \n      },\n      {\n        \"id\": \"32\",\n        \"value\": 2098.232812\n\n    \n      },\n      {\n        \"id\": \"33\",\n        \"value\":984.1263666\n\n    \n    \n      },\n      {\n        \"id\": \"34\",\n        \"value\": 683.2777386\n\n    \n    \n      },\n      {\n        \"id\": \"35\",\n        \"value\": 660.5726703\n\n    \n    \n      },\n      {\n        \"id\": \"36\",\n        \"value\": 665.3068724\n\n    \n    \n      },\n      {\n        \"id\": \"37\",\n        \"value\": 358.9365577\n\n    \n    \n      },\n      {\n        \"id\": \"38\",\n        \"value\": 839.400815\n\n    \n    \n      },\n      {\n        \"id\": \"39\",\n        \"value\": 1697.815948\n\n    \n      },\n      {\n        \"id\": \"40\",\n        \"value\": 1424.375096\n\n    \n      },\n      {\n        \"id\": \"41\",\n        \"value\": 906.4509602\n\n    \n      },\n      {\n        \"id\": \"42\",\n        \"value\": 1199.910853\n\n    \n      },\n      {\n        \"id\": \"43\",\n        \"value\": 1210.761625\n\n    \n      },\n      {\n        \"id\": \"44\",\n        \"value\": 1092.091662\n\n    \n      },\n      {\n        \"id\": \"45\",\n        \"value\": 218.9141155\n\n    \n      },\n      {\n        \"id\": \"46\",\n        \"value\": 929.8907307\n\n    \n      },\n      {\n        \"id\": \"47\",\n        \"value\": 637.894715\n\n    \n      },\n      {\n        \"id\": \"48\",\n        \"value\": 288.5923978\n\n    \n      },\n      {\n        \"id\": \"49\",\n        \"value\": 758.016321\n\n    \n      },\n      {\n        \"id\": \"50\",\n        \"value\": 386.689451\n\n      }\n    ]","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/generalmortality.js",["102"],"export default [\r\n    {\r\n        \"id\": \"01\",\r\n        \"value\": 26.48347608\r\n\r\n    },\r\n      {\r\n        \"id\": \"02\",\r\n        \"value\": 2.460549195\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"03\",\r\n        \"value\": 40.0894828\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"04\",\r\n        \"value\":12.39311764\r\n\r\n      },\r\n      {\r\n        \"id\": \"05\",\r\n        \"value\": 19.9634427\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"06\",\r\n        \"value\": 30.60093962\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"07\",\r\n        \"value\": 123.580514\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"08\",\r\n        \"value\":53.91450084\r\n\r\n      },\r\n      {\r\n        \"id\": \"09\",\r\n        \"value\": 24.23905275\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"10\",\r\n        \"value\": 30.64773816\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"11\",\r\n        \"value\": 1.695068481\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"12\",\r\n        \"value\": 7.050666876\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"13\",\r\n        \"value\": 59.32059804\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"14\",\r\n        \"value\": 42.27432292\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"15\",\r\n        \"value\": 25.5461844\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"16\",\r\n        \"value\": 10.8467539\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"17\",\r\n        \"value\": 15.08615335\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"18\",\r\n        \"value\": 75.24533788\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"19\",\r\n        \"value\": 8.77837722\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"20\",\r\n        \"value\": 56.27158566\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"21\",\r\n        \"value\": 122.5969724\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"22\",\r\n        \"value\": 63.90398901\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"23\",\r\n        \"value\": 28.15786562\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"24\",\r\n        \"value\":46.67105041\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"25\",\r\n        \"value\": 18.70490375\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"26\",\r\n        \"value\":3.742592007\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"27\",\r\n        \"value\": 16.02557475\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"28\",\r\n        \"value\":21.94694035\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"29\",\r\n        \"value\": 29.41801603\r\n\r\n      },\r\n      {\r\n        \"id\": \"30\",\r\n        \"value\": 177.1747933\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"31\",\r\n        \"value\": 28.04234394\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"32\",\r\n        \"value\": 167.1673376\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"33\",\r\n        \"value\": 16.25654564\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"34\",\r\n        \"value\": 12.33495437\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"35\",\r\n        \"value\": 27.53847602\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"36\",\r\n        \"value\": 11.65032841\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"37\",\r\n        \"value\": 6.377827731\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"38\",\r\n        \"value\": 55.07737899\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"39\",\r\n        \"value\": 94.01894161\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"40\",\r\n        \"value\": 23.71465962\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"41\",\r\n        \"value\": 13.33847279\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"42\",\r\n        \"value\": 12.75410467\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"43\",\r\n        \"value\":14.5332899\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"44\",\r\n        \"value\":7.829173058\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"45\",\r\n        \"value\": 8.974517179\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"46\",\r\n        \"value\": 23.9938572\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"47\",\r\n        \"value\": 19.23861822\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"48\",\r\n        \"value\": 5.635701556\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"49\",\r\n        \"value\": 14.75328016\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"50\",\r\n        \"value\": 4.319587255\r\n\r\n      }\r\n    ]","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/prisonmortality.js",["103"],"export default [\r\n    {\r\n        \"id\": \"01\",\r\n        \"value\": 230.0326325\r\n\r\n    },\r\n      {\r\n        \"id\": \"02\",\r\n        \"value\": 65.41648495\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"03\",\r\n        \"value\": 82.55933953\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"04\",\r\n        \"value\": 0 //NO DATA AVAILABLE\r\n      },\r\n      {\r\n        \"id\": \"05\",\r\n        \"value\": 98.482522\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"06\",\r\n        \"value\": 95.41334424\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"07\",\r\n        \"value\": 106.974754\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"08\",\r\n        \"value\": 0 //NO DATA AVAILABLE\r\n      },\r\n      {\r\n        \"id\": \"09\",\r\n        \"value\": 230.030549\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"10\",\r\n        \"value\": 169.3060517\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"11\",\r\n        \"value\": 23.90057361\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"12\",\r\n        \"value\": 80.04268943\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"13\",\r\n        \"value\": 163.1268148\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"14\",\r\n        \"value\": 165.2687683\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"15\",\r\n        \"value\": 148.3479434\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"16\",\r\n        \"value\": 130.7344901\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"17\",\r\n        \"value\": 234.3292326\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"18\",\r\n        \"value\": 219.3292769\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"19\",\r\n        \"value\": 0\r\n    \r\n      },\r\n      {\r\n        \"id\": \"20\",\r\n        \"value\": 76.58643326\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"21\",\r\n        \"value\": 133.7494427\r\n\r\n      },\r\n      {\r\n        \"id\": \"22\",\r\n        \"value\": 275.3852464\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"23\",\r\n        \"value\": 79.20792079\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"24\",\r\n        \"value\": 0 //NO DATA AVAILABLE\r\n    \r\n      },\r\n      {\r\n        \"id\": \"25\",\r\n        \"value\": 157.0858453\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"26\",\r\n        \"value\":106.7805659\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"27\",\r\n        \"value\": 111.1111111\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"28\",\r\n        \"value\": 0\r\n    \r\n      },\r\n      {\r\n        \"id\": \"29\",\r\n        \"value\": 0 //NO DATA AVAILABLE\r\n      },\r\n      {\r\n        \"id\": \"30\",\r\n        \"value\": 351.7316017\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"31\",\r\n        \"value\": 232.2109803\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"32\",\r\n        \"value\": 50.02362227\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"33\",\r\n        \"value\":91.33313762\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"34\",\r\n        \"value\": 83.96305626\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"35\",\r\n        \"value\": 260.1188474\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"36\",\r\n        \"value\": 161.4540087\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"37\",\r\n        \"value\": 136.8925394\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"38\",\r\n        \"value\": 96.05917245\r\n\r\n    \r\n    \r\n      },\r\n      {\r\n        \"id\": \"39\",\r\n        \"value\": 0 //no data available\r\n    \r\n      },\r\n      {\r\n        \"id\": \"40\",\r\n        \"value\": 204.8544292\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"41\",\r\n        \"value\": 124.8049922\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"42\",\r\n        \"value\": 143.1053869\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"43\",\r\n        \"value\": 136.6869378\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"44\",\r\n        \"value\": 154.532967\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"45\",\r\n        \"value\": 0\r\n    \r\n      },\r\n      {\r\n        \"id\": \"46\",\r\n        \"value\": 139.1318175\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"47\",\r\n        \"value\": 19.7394394\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"48\",\r\n        \"value\": 95.87727709\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"49\",\r\n        \"value\": 76.93787267\r\n\r\n    \r\n      },\r\n      {\r\n        \"id\": \"50\",\r\n        \"value\": 0 //none available\r\n      }\r\n    ]","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/linechart.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":75,"column":13,"nodeType":"114","messageId":"115","endLine":75,"endColumn":22},{"ruleId":"108","severity":1,"message":"116","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"117","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":16},{"ruleId":"108","severity":1,"message":"118","line":52,"column":41,"nodeType":"110","messageId":"111","endLine":52,"endColumn":45},{"ruleId":"119","severity":1,"message":"120","line":70,"column":6,"nodeType":"121","endLine":70,"endColumn":28,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"118","line":114,"column":53,"nodeType":"110","messageId":"111","endLine":114,"endColumn":57},{"ruleId":"108","severity":1,"message":"118","line":154,"column":64,"nodeType":"110","messageId":"111","endLine":154,"endColumn":68},{"ruleId":"119","severity":1,"message":"123","line":186,"column":6,"nodeType":"121","endLine":186,"endColumn":21,"suggestions":"124"},{"ruleId":"104","replacedBy":"125"},{"ruleId":"106","replacedBy":"126"},{"ruleId":"108","severity":1,"message":"127","line":4,"column":9,"nodeType":"110","messageId":"111","endLine":4,"endColumn":24},{"ruleId":"119","severity":1,"message":"128","line":19,"column":19,"nodeType":"129","endLine":45,"endColumn":4},{"ruleId":"119","severity":1,"message":"130","line":45,"column":6,"nodeType":"121","endLine":45,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":1,"nodeType":"134","endLine":255,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":1,"column":1,"nodeType":"134","endLine":303,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":1,"column":1,"nodeType":"134","endLine":305,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":1,"column":1,"nodeType":"134","endLine":295,"endColumn":6},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'isOpen_NJ'.","ObjectExpression","unexpected","'render' is defined but never used.","'button' is assigned a value but never used.","'rest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["137"],"React Hook useEffect has missing dependencies: 'datesList', 'playing', and 'togglePlaying'. Either include them or remove the dependency array.",["138"],["135"],["136"],"'FirebaseContext' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'firebase.app'. Either include it or remove the dependency array.",["139"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [data, date, valueDisplayed]",{"range":"146","text":"147"},"Update the dependencies array to be: [currDateIndex, datesList, playing, togglePlaying]",{"range":"148","text":"149"},"Update the dependencies array to be: [firebase.app]",{"range":"150","text":"151"},[2078,2100],"[data, date, valueDisplayed]",[5110,5125],"[currDateIndex, datesList, playing, togglePlaying]",[1176,1178],"[firebase.app]"]