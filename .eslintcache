[{"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/index.js":"1","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/reportWebVitals.js":"2","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/App.js":"3","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/index.js":"4","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/about.js":"5","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/home.js":"6","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Navbar.js":"7","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/context.js":"8","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/firebase.js":"9","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Maps/GlobalCases.js":"10","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/global.js":"11"},{"size":620,"mtime":1607795190000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607795190000,"results":"14","hashOfConfig":"13"},{"size":910,"mtime":1607827450606,"results":"15","hashOfConfig":"13"},{"size":128,"mtime":1607795190000,"results":"16","hashOfConfig":"13"},{"size":725,"mtime":1607795190000,"results":"17","hashOfConfig":"13"},{"size":1979,"mtime":1607816522255,"results":"18","hashOfConfig":"13"},{"size":2155,"mtime":1607815279657,"results":"19","hashOfConfig":"13"},{"size":111,"mtime":1607795190000,"results":"20","hashOfConfig":"13"},{"size":892,"mtime":1607795190000,"results":"21","hashOfConfig":"13"},{"size":9107,"mtime":1607831854143,"results":"22","hashOfConfig":"13"},{"size":1446,"mtime":1607829046014,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12lnpt1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/index.js",[],["50","51"],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/reportWebVitals.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/App.js",["52","53"],"import React, { Component } from 'react';\nimport USAMap from \"react-usa-map\";\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport MapTest from './pages/home.js';\nimport About from './pages/about.js';\nimport Global from './pages/global.js';\n\nimport { FirebaseContext } from './components/Firebase';\n\nfunction App(){\n    return (\n      <Router>\n        <Navbar />\n        <Switch>\n          <div class=\"App-header\">\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/global\">\n              <FirebaseContext.Consumer>\n                {(firebase) => <Global firebase={firebase} />}\n              </FirebaseContext.Consumer>\n            </Route>\n            <Route path=\"/\" exact component={MapTest} />\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n\n \nexport default App;\n","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/index.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/about.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/home.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Navbar.js",["54","55"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaBars, FaTimes } from 'react-icons/fa'\r\nimport { RiVirusFill } from 'react-icons/ri'\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons/lib'\r\nimport { render } from '@testing-library/react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false)\r\n  const handleClick = () => setClick(!click)\r\n  const [button, setButton] = useState(true)\r\n  const closeMobileMenu = () => setClick(false)\r\n  const showButton = () => {\r\n    if(window.innerWidth <= 960){\r\n      setButton(false)\r\n    } else{\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  },[]);\r\n  window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n      <>\r\n      <IconContext.Provider value={{color: '#fff'}}>\r\n        <Paper className=\"navbar\" elevation = {10} style = {{background: '#64A8F0', borderRadius: 0}}>\r\n          <div className=\"navbar-container container\">\r\n            <Link to='/' className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n              <RiVirusFill className='navbar-icon'/>\r\n              COVID-19 and Unemployment in the US\r\n              </Link> \r\n              <div className=\"menu-icon\" onClick = {handleClick}>\r\n                {click ? <FaTimes /> : <FaBars />}\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/global\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Global\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                About\r\n              </Link>\r\n            </li>\r\n      \r\n          </ul>\r\n          </div>\r\n        </Paper>\r\n        </IconContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport default Navbar\r\n","/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/context.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Firebase/firebase.js",[],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/components/Maps/GlobalCases.js",["56","57","58","59","60"],"/Users/corymilsap/vscode-workspace/gs-hackathon/gs-hackathon/src/pages/global.js",["61","62","63"],"import React from 'react';\n\n// Firebase\nimport {FirebaseContext} from '../components/Firebase';\n\n// Mui Comonents\nimport Grid from '@material-ui/core/Grid';\n\n// Custom Components\nimport GlobalCases from '../components/Maps/GlobalCases';\n\nconst Global = props => {\n  const {firebase, ...rest} = props;\n\n  const [data, setData] = React.useState()\n  const [datesList, setDatesList] = React.useState();\n  const [status, setStatus] = React.useState('loading');\n\n  React.useEffect(async () => {\n    // Load in data\n    const getCovidData = firebase.app.functions().httpsCallable(\"getCovidData\");\n    const response = await getCovidData({ dataset: \"who\" });\n\n    if (response.data) {\n      const data = JSON.parse(response.data);\n      setData(data.data);\n\n      // Get list of all available dates in dataset.\n      let dates = [];\n      for (let point of data.data) {\n        dates.push(point.date);\n      }\n\n      // Remove duplicate dates and sort\n      let uniqueDates = [...new Set(dates)];\n      uniqueDates.sort();\n\n      setDatesList(uniqueDates);\n      setStatus(\"successful\");\n\n    } else {\n      setStatus(\"failed\");\n      console.error(\"getCovidData failed\");\n    }\n  }, []);\n\n  return (\n    <Grid container style = {{width: '100vw'}} justify = 'space-around' {...rest}>\n      <Grid item xs = {12} md = {10}>\n      <GlobalCases data = {data} status = {status} datesList = {datesList}/>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Global;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"72","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"73","line":7,"column":10,"nodeType":"70","messageId":"71","endLine":7,"endColumn":16},{"ruleId":"68","severity":1,"message":"74","line":14,"column":10,"nodeType":"70","messageId":"71","endLine":14,"endColumn":16},{"ruleId":"68","severity":1,"message":"75","line":52,"column":41,"nodeType":"70","messageId":"71","endLine":52,"endColumn":45},{"ruleId":"76","severity":1,"message":"77","line":70,"column":6,"nodeType":"78","endLine":70,"endColumn":28,"suggestions":"79"},{"ruleId":"68","severity":1,"message":"75","line":114,"column":53,"nodeType":"70","messageId":"71","endLine":114,"endColumn":57},{"ruleId":"68","severity":1,"message":"75","line":154,"column":64,"nodeType":"70","messageId":"71","endLine":154,"endColumn":68},{"ruleId":"76","severity":1,"message":"80","line":186,"column":6,"nodeType":"78","endLine":186,"endColumn":21,"suggestions":"81"},{"ruleId":"68","severity":1,"message":"82","line":4,"column":9,"nodeType":"70","messageId":"71","endLine":4,"endColumn":24},{"ruleId":"76","severity":1,"message":"83","line":19,"column":19,"nodeType":"84","endLine":45,"endColumn":4},{"ruleId":"76","severity":1,"message":"85","line":45,"column":6,"nodeType":"78","endLine":45,"endColumn":8,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'USAMap' is defined but never used.","'render' is defined but never used.","'button' is assigned a value but never used.","'rest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has missing dependencies: 'datesList', 'playing', and 'togglePlaying'. Either include them or remove the dependency array.",["90"],"'FirebaseContext' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'firebase.app'. Either include it or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [data, date, valueDisplayed]",{"range":"98","text":"99"},"Update the dependencies array to be: [currDateIndex, datesList, playing, togglePlaying]",{"range":"100","text":"101"},"Update the dependencies array to be: [firebase.app]",{"range":"102","text":"103"},[2078,2100],"[data, date, valueDisplayed]",[5110,5125],"[currDateIndex, datesList, playing, togglePlaying]",[1176,1178],"[firebase.app]"]
