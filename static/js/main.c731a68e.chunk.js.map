{"version":3,"sources":["components/Navbar.js","pages/home.js","App.js","reportWebVitals.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","index.js"],"names":["Navbar","useState","click","setClick","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","Provider","value","color","className","to","onClick","Home","mapHandler","event","alert","target","dataset","name","statesCustomConfig","fill","clickHandler","console","log","style","customize","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FirebaseContext","React","createContext","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","app","initializeApp","ReactDOM","render","document","getElementById"],"mappings":"2TA2DeA,MAnDf,WAAmB,IAAD,EACUC,oBAAS,GADnB,mBACTC,EADS,KACFC,EADE,OAGYF,oBAAS,GAHrB,mBAGDG,GAHC,WAIVC,EAAkB,kBAAMF,GAAS,IACjCG,EAAa,WACdC,OAAOC,YAAc,IACtBJ,GAAU,GAEVA,GAAU,IASZ,OALFK,qBAAU,WACRH,MACA,IACFC,OAAOG,iBAAiB,SAAUJ,GAG9B,mCACA,cAAC,IAAYK,SAAb,CAAsBC,MAAO,CAACC,MAAO,QAArC,SACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcE,QAASX,EAA9C,UACE,cAAC,IAAD,CAAaS,UAAU,gBADzB,yCAIE,qBAAKA,UAAU,YAAYE,QAzBnB,kBAAMb,GAAUD,IAyBxB,SACGA,EAAQ,cAAC,IAAD,IAAc,cAAC,IAAD,MAE7B,qBAAIY,UAAWZ,EAAQ,kBAAoB,WAA3C,UACE,oBAAIY,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAYE,QAASX,EAA5C,oBAIF,oBAAIS,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAAYE,QAASX,EAAjD,kC,4CCXCY,E,4MA9BXC,WAAa,SAACC,GACVC,MAAMD,EAAME,OAAOC,QAAQC,O,EAG/BC,mBAAqB,WACjB,MAAO,CACH,GAAM,CACJC,KAAM,OACNC,aAAc,SAACP,GAAD,OAAWQ,QAAQC,IAAI,wBAAyBT,EAAME,OAAOC,WAE7E,GAAM,CACJG,KAAM,WAER,GAAM,CACFA,KAAM,S,uDAMd,OACI,sBAAKX,UAAU,MAAf,UACI,oBAAIe,MAAO,CAAChB,MAAO,SAAnB,mCACA,cAAC,IAAD,CAAQiB,UAAWC,KAAKP,qBAAsBR,QAASe,KAAKb,aAC5D,oBAAIW,MAAO,CAAChB,MAAO,SAAnB,6F,GAzBGmB,aCmBJC,MAff,WACI,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKnB,UAAU,MAAf,SACF,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,YCDOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHCQ,EAFSC,IAAMC,cAAc,M,QCKtCC,EAAS,CACbC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBCXFC,EDeb,aAAe,oBACbC,IAAIC,cAAcV,GAElBf,KAAKwB,IAAMA,KEZfE,IAASC,OACH,cAAC,EAAgB/C,SAAjB,CAA0BC,MAAS,IAAI0C,EAAvC,SACF,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.c731a68e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaBars, FaTimes } from 'react-icons/fa'\r\nimport { RiVirusFill } from 'react-icons/ri'\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons/lib'\r\nimport { render } from '@testing-library/react';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false)\r\n  const handleClick = () => setClick(!click)\r\n  const [button, setButton] = useState(true)\r\n  const closeMobileMenu = () => setClick(false)\r\n  const showButton = () => {\r\n    if(window.innerWidth <= 960){\r\n      setButton(false)\r\n    } else{\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  },[]);\r\n  window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n      <>\r\n      <IconContext.Provider value={{color: '#fff'}}>\r\n        <div className=\"navbar\">\r\n          <div className=\"navbar-container container\">\r\n            <Link to='/' className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n              <RiVirusFill className='navbar-icon'/>\r\n              COVID-19 and Unemployment in the US\r\n              </Link> \r\n              <div className=\"menu-icon\" onClick = {handleClick}>\r\n                {click ? <FaTimes /> : <FaBars />}\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                About\r\n              </Link>\r\n            </li>\r\n      \r\n          </ul>\r\n          </div>\r\n        </div>\r\n        </IconContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react';\nimport USAMap from 'react-usa-map';\n\nclass Home extends Component {\n    mapHandler = (event) => {\n        alert(event.target.dataset.name);\n    };\n\n    statesCustomConfig = () => {\n        return {\n            \"NJ\": {\n              fill: \"navy\",\n              clickHandler: (event) => console.log('Custom handler for NJ', event.target.dataset)\n            },\n            \"NY\": {\n              fill: \"#CC0000\"\n            },\n            \"MN\": {\n                fill: \"red\"\n            }\n          };\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1 style={{color: 'black'}}>Covid Impact by State</h1>\n                <USAMap customize={this.statesCustomConfig()} onClick={this.mapHandler} />\n                <h6 style={{color: 'black'}}>Dataset provided by the CDC and accessed via Goldman Sachs's Marquee API</h6>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport USAMap from \"react-usa-map\";\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport MapTest from './pages/home.js';\n \nfunction App(){\n    return (\n      <Router>\n        <Navbar />\n        <div className=\"App\">\n      <header className=\"App-header\">\n        <MapTest/>\n      </header>\n    </div>\n      </Router>\n      \n    );\n  }\n\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","import app from 'firebase/app';\n// import 'firebase/auth';\n// import 'firebase/firestore';\n// import 'firebase/functions';\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst config = {\n  apiKey: \"AIzaSyCPc8HYjEVQlp_xTgY-Nx2LBA_F5K52zDE\",\n  authDomain: \"gs-hackathon.firebaseapp.com\",\n  projectId: \"gs-hackathon\",\n  storageBucket: \"gs-hackathon.appspot.com\",\n  messagingSenderId: \"505118643224\",\n  appId: \"1:505118643224:web:4b088d81cd6b9c72e35f6d\",\n  measurementId: \"G-X3VLM33XE4\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.app = app;\n    // this.auth = app.auth();\n    // this.db = app.firestore();\n    // this.functions = app.functions();\n\n    // this.perf = app.performance();\n    // this.analytics = app.analytics();\n\n    // new app.auth.GoogleAuthProvider();\n    // new app.auth.EmailAuthProvider();\n  }\n}\n\nexport default Firebase","import FirebaseContext from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport {FirebaseContext};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Firebase\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n      <FirebaseContext.Provider value = {new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}